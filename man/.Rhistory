ancestor.node
sim.object
equivalence[which(equivalence[,2]==ancestor.node), 1]
i=2
i in sequence(n.edge.all)) {
relevant.row<-which(sim.object$to==equivalence[i,2])
ancestor.node<-sim.object$from[relevant.row]
relevant.row<-which(sim.object$to==equivalence[i,2])
ancestor.node<-sim.object$from[relevant.row]
equivalence[which(equivalence[,2]==ancestor.node), 1]
for(i in sequence(n.edge.all)) {
relevant.row<-which(sim.object$to==equivalence[i,2])
ancestor.node<-sim.object$from[relevant.row]
phy$edge[i,1]<-equivalence[which(equivalence[,2]==ancestor.node), 1]
}
phy
dput(phy)
phy$edge.length<-sim.object$edge.length
dput(phy)
sim.object
phy$Nnode<-1+n.edge.all-n.tip
phy$tip.label=paste("t",n.tip,sep="")
dput(phy)
phy$order<-NULL
phy
n.edge.all<-length(sim.object$to)
n.tip<-sum(sim.object$tip)
phy<-compute.brlen(stree(2, tip.label=c(2,1)),method=0)
phy$edge<-matrix(NA,nrow=n.edge.all,ncol=2)
phy$edge[,2]<-sequence(n.edge.all)
equivalence<-data.frame(phylo=sequence(n.edge.all+1),sim.object=rep(NA,n.edge.all+1))
equivalence[sequence(n.tip),2]<-sim.object$to[sim.object$tip]
equivalence[c((n.tip+1):(n.edge.all+1)),2]<-sort(c(1,sim.object$to[!sim.object$tip]))
print(equivalence)
for(i in sequence(n.edge.all)) {
relevant.row<-which(sim.object$to==equivalence[i,2])
ancestor.node<-sim.object$from[relevant.row]
phy$edge[i,1]<-equivalence[which(equivalence[,2]==ancestor.node), 1]
}
phy$edge.length<-sim.object$edge.length
phy$Nnode<-1+n.edge.all-n.tip
phy$tip.label=paste("t",n.tip,sep="")
phy
n.edge.all<-length(sim.object$to)
n.tip<-sum(sim.object$tip)
phy<-compute.brlen(stree(2, tip.label=c(2,1)),method=0)
phy$edge<-matrix(NA,nrow=n.edge.all,ncol=2)
phy$edge[,2]<-sequence(n.edge.all)
equivalence<-data.frame(phylo=sequence(n.edge.all+1),sim.object=rep(NA,n.edge.all+1))
equivalence[sequence(n.tip),2]<-sim.object$to[sim.object$tip]
equivalence[c((n.tip+1):(n.edge.all+1)),2]<-sort(c(1,sim.object$to[!sim.object$tip]))
print(equivalence)
for(i in sequence(n.edge.all)) {
relevant.row<-which(sim.object$to==equivalence[i,2])
ancestor.node<-sim.object$from[relevant.row]
phy$edge[i,1]<-equivalence[which(equivalence[,2]==ancestor.node), 1]
}
phy
phy$edge.length<-sim.object$edge.length
phy
dput(phy)
phy$Nnode<-1+n.edge.all-n.tip
phy
phy$tip.label=paste("t",sequence(n.tip),sep="")
phy
phy$order<-NULL
phy<-reorder(phy)
phy
plot(phy)
fix(chiroptera)
fix(phylocom)
quit()
library(phytools)
quit()
library(diversitree)
help(optim)
library(turboMEDUSA)
data(whales)
whales
str(whales)
plot(whales)
mm<-as.phylo(whales)
names(whales)
plot(whale$phy)
plot(whales$phy)
whales$phy
write.tree(whales$phy,"whales.tre")
library(phangorn)
citation(phangorn)
citation("phangorn")
help(optim)
library(diversitree)
library(geiger)
?geiger
birthdeath.tree(b=0.1,d=0, time.stop=0)
birthdeath.tree(b=0.1,d=0, time.stop=0.0000000000000000000000000000000000000001)
library(diversitree)
?find.mle
tree.bd(pars=c(.1,0),max.t=0.0000000000000000000000001)
tree.bd(pars=c(.1,0),max.t=0.001)
tree.bd(pars=c(.1,0),max.t=10)
tree.bd(pars=c(.1,0),max.t=2)
tree.bd(pars=c(.1,0),max.t=2, include.extinct=TRUE)
?break
n.rep<-50
n.extinct<-0
b=1
d=.8
source('~/Desktop/testMorlon.R')
T<-2
n.rep<-50
n.extinct<-0
b1=1
d1=.8
b2=1
d2=0
r1<-b1-d1
MorlonPhi<-1-exp(r1*T)/(b1/r1*(exp(r1*T)-1))
source('~/Desktop/testMorlon.R')
source('~/.active-rstudio-document')
source('~/Desktop/testMorlon.R')
sapply(replicate(50, tree.bd(pars=c(1,1), max.taxa=2, include.extinct=TRUE)), Ntip)
sapply(replicate(50, tree.bd(pars=c(1,1), max.taxa=2, include.extinct=TRUE)))
(replicate(50, tree.bd(pars=c(1,1), max.taxa=2, include.extinct=TRUE)))
sapply(replicate(50, tree.bd(pars=c(1,1), max.taxa=2, include.extinct=TRUE)), is.null)
sum(sapply(replicate(50, tree.bd(pars=c(1,1), max.taxa=2, include.extinct=TRUE)), is.null))
sum(sapply(replicate(500, tree.bd(pars=c(1,1), max.taxa=2, include.extinct=TRUE)), is.null))
?ape
?rbdtree
rbdtree(1,0,Tmax=0.00000000000000000001)
tree.bd
make.tree.bd
source("~/Downloads/diversitree/simulate-bd.R")
source("/Users/jbeaulieu/Downloads/diversitree/R/simulate-bd.R")
make.tree.bd(pars=c(1,0), max.t=0.0000000000000000000001)
make.tree.bd(pars=c(1,0), max.t=0.200000000000000000001)
make.tree.bd(pars=c(1,0), max.t=3.200000000000000000001)
dim(make.tree.bd(pars=c(1,0), max.t=3.200000000000000000001))
make.tree.bd(pars=c(0,3), max.t=2.200000000000000000001)
source('~/Desktop/testMorlon.R')
a<data.frame(c(1:4))
a<-data.frame(c(1:4))
a
a<-data.frame(matrix(nrow=1, ncol=5))
a
dim(a)
a<-data.frame(matrix(5,nrow=1, ncol=5))
a
dim(a[which(a[,1]>10),])
dim(a[which(a[,1]>10),])[1]
source('~/Desktop/testMorlon.R')
raw<-make.tree.bd(pars=c(b1,d1), max.taxa=2)
raw
dput(raw)
raw.extant<-raw[which(raw$extinct==FALSE),]
raw.extant
dim(raw.extant)
source('~/Desktop/testMorlon.R')
MorlonCanonical<-function(lamb, mu) {
r<-lamb-mu
res<-1-exp(r*t)/(1/f+lamb/r*(exp(r*t)-1))
return(res)
}
MorlonCanonical(.15,0)
MorlonCanonical<-function(lamb, mu, t) {
r<-lamb-mu
res<-1-exp(r*t)/(1/f+lamb/r*(exp(r*t)-1))
return(res)
}
MorlonCanonical(.15,0, 35)
MorlonCanonical<-function(lamb, mu, t) {
f<-1
r<-lamb-mu
res<-1-exp(r*t)/(1/f+lamb/r*(exp(r*t)-1))
return(res)
}
MorlonCanonical(.15,0, 35)
source('~/Desktop/testMorlon.R')
source('~/.active-rstudio-document')
source('~/Desktop/testMorlon.R')
plot(density(ntax.vector))
hist(ntax.vector)
source('~/Desktop/testMorlon.R')
is.na(NaN)
.Machine$double.eps^0.25
sum(c(TRUE, TRUE))
make.prior.exponential(r)
library(diversitree)
make.prior.exponential(r)
make.prior.exponential(1)
ll<-make.prior.exponential(1)
names(ll)
ll
ll$pars
ll$par
sum(dexp(2, 3, log = TRUE))
?lik
??lik
library(phytools)
?predict
?nls
?predict
?loess
library(ape)
?collapsed.intervals
pars <- c(0.1, 0.2, 0.03, 0.03, 0.01, 0.01)
set.seed(546)
phy <- tree.bisse(pars, max.taxa=30, x0=0)
library(diversitree)
pars <- c(0.1, 0.2, 0.03, 0.03, 0.01, 0.01)
set.seed(546)
phy <- tree.bisse(pars, max.taxa=30, x0=0)
plot(phy, show.node.label=TRUE, label.offset=.1, font=1, cex=.75,
no.margin=TRUE)
lik.b <- make.bisse(phy, phy$tip.state)
lik.b(pars) # -93.62479
Split this phylogeny at three points: nd15, nd18 and nd26
nodes <- c("nd15", "nd18", "nd26")
nodes.i <- match(nodes, phy$node.label) + length(phy$tip.label)
nodelabels(node=nodes.i, pch=19, cex=2, col="#FF000099")
To make a split BiSSE function, pass the node locations and times in:
lik.s <- make.bisse.split(phy, phy$tip.state, nodes.i)
pars4 <- rep(pars, 4)
pars4
Run the likelihod calculation:
lik.s(pars4)
pars4
nodelabels(node=nodes.i, pch=19, cex=2, col="#FF000099")
Here is the phylogeny:
plot(phy, show.node.label=TRUE, label.offset=.1, font=1, cex=.75,
no.margin=TRUE)
Here is a plain BiSSE function for comparison:
lik.b <- make.bisse(phy, phy$tip.state)
lik.b(pars) # -93.62479
Split this phylogeny at three points: nd15, nd18 and nd26
nodes <- c("nd15", "nd18", "nd26")
This is the index in ape's node indexing:
nodes.i <- match(nodes, phy$node.label) + length(phy$tip.label)
nodelabels(node=nodes.i, pch=19, cex=2, col="#FF000099")
quit()
library(data.table)
ls()
mm<-as.data.table(xx)
mm<-as.data.table(g)
g
trait
mm<-as.data.table(trait)
mm
quit()
